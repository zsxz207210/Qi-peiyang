package Game;
import javax.swing.*;
import javax.swing.border.BevelBorder;
import java.awt.*;
import java.awt.event.*;
import java.util.Random;
import java.util.StringJoiner;

public class MainUItest extends JFrame {
    int[][] changed = new int[4][4];
    public MainUItest(){
        this.setFocusable(true);
        //初始化游戏界面
        this.initJM();
        //初始化菜单
        this.initMnue();
        //初始化图片
        this.initimage();
        //初始化数据（打乱）
        this.disorder();
        //添加游戏操作
        this.playgame();


        this.setVisible(true);
    }
    //游戏
    public void playgame(){

        soutarray(changed);

        int a = getzero(changed);

        System.out.println("空白图像在第"+(a+1)+"的位置");

        this.addKeyListener(new KeyListener() {
            int b = a;
            @Override
            public void keyTyped(KeyEvent e) {

            }

            @Override
            public void keyPressed(KeyEvent e) {

                System.out.println("按键按下：" + KeyEvent.getKeyText(e.getKeyCode()));

                switch(e.getKeyCode()){
                    case KeyEvent.VK_UP:
                        if((b-4)>=0){
                            int temp ;
                            temp = changed[b /4][b %4];
                            changed[b /4][b %4] = changed[(b-4)/4][(b-4)%4];
                            changed[(b-4)/4][(b-4)%4]=temp;

                        }
                        break;
                    case KeyEvent.VK_DOWN:
                        if((b+4)<=15){
                            int temp ;
                            temp = changed[b /4][b %4];
                            changed[b /4][b %4] = changed[(b+4)/4][(b+4)%4];
                            changed[(b+4)/4][(b+4)%4]=temp;
                        }
                        break;
                    case KeyEvent.VK_LEFT:
                        if((b-1)>=0){
                            int temp ;
                            temp = changed[b /4][b %4];
                            changed[b /4][b %4] = changed[(b-1)/4][(b-1)%4];
                            changed[(b-1)/4][(b-1)%4]=temp;
                        }
                        break;
                    case KeyEvent.VK_RIGHT:
                        if((b+1)<=15){
                            int temp ;
                            temp = changed[b /4][b %4];
                            changed[b /4][b %4] = changed[(b+1)/4][(b+1)%4];
                            changed[(b+1)/4][(b+1)%4]=temp;
                        }
                        break;

                }
                initimage();

                repaint();
                b=getzero(changed);
                int core = e.getKeyCode();
                if (core==65){
                    ImageIcon C = new ImageIcon("D:/idea/class 1/1/image1/原图.png");
                    JLabel D = new JLabel(C);
                    D.setBounds(0,35,580,640);
                    addJLable(D);
                }
                if (core==66) {
                    int num = 1;
                    for (int i = 0; i < 4; i++) {
                        for (int j = 0; j < 4; j++) {
                            if(num<=15){
                                changed[i][j]=num;
                            }else{
                                changed[i][j]=0;
                            }
                            num++;
                        }
                    }
                    initimage();

                    repaint();
                    b=getzero(changed);
                }

            }

            @Override
            public void keyReleased(KeyEvent e) {
                int core = e.getKeyCode();
                if (core==65){
                    initimage();
                    repaint();
                }

            }
        });

        this.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int iffinish = isfinished();
                if(iffinish==1){
                    ImageIcon a = new ImageIcon("D:/idea/class 1/1/image1/通关成功.png");
                    JLabel b = new JLabel(a);
                    b.setBounds(145,260,300,150);
                    System.out.println("拼图完成");
                    addJLable(b);

                }else {
                    int number = findpicture(e);
                    int zero = getzero(changed);
                    changed[zero/4][zero%4]=changed[number/4][number%4];
                    changed[number/4][number%4]=0;
                    initimage();

                    repaint();
                }



            }

        } );
    }

    public void addJLable(JLabel A){
        this.getContentPane().add(A);
        this.getContentPane().setComponentZOrder(A, 0);
        this.repaint();
    }

    //判断是否拼完图
    public int isfinished(){
        int number = 1;
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                if(changed[i][j]==number){
                    number++;
                }
            }
        }
        if( number==16){
            return 1;
        }
        return 0;
    }



    //寻找空白位置
    public int getzero(int[][] abc){
        int number = -1;
        outerLoop:
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                number++;
                if(abc[i][j]==0){
                    break outerLoop;
                }
            }
        }
        return number;
    }

    //输出二维数组
    public void soutarray(int[][] abc){
        for (int i = 0; i < 4; i++) {
            StringJoiner sj = new StringJoiner(",","[","]");
            for (int j = 0; j < 4; j++) {
                StringBuilder sb= new StringBuilder();
                sb.append(abc[i][j]);
                sj.add(sb);
            }
            String s =  sj.toString();
            System.out.println(s);
        }
    }
    //打乱图片
    public void disorder(){
        int[] origan = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,0};
        for (int i = 0; i < 16; i++) {
            Random r = new Random();
            int j = r.nextInt(0,15);
            int temp = origan[i];
            origan[i]=origan[j];
            origan[j]=temp;
        }

        int number = 0;
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                changed[i][j]=origan[number];
                number++;
            }
        }
        initimage();
    }

    //放置图片
    public void initimage(){
        this.getContentPane().removeAll();
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {

                ImageIcon Icon = new ImageIcon("D:/idea/class 1/1/image1/"+changed[i][j]+".png");
                JLabel jLabel = new JLabel(Icon);
                jLabel.setBounds(j*105+83,i*105+140,105,105);
                jLabel.setBorder(new BevelBorder(1));
                //getContentPane()是原生的容器，不用自己创建
                this.getContentPane().add(jLabel);

            }
        }
        ImageIcon a = new ImageIcon("D:\\idea\\class 1\\1\\src\\Game\\img.png");
        JLabel b = new JLabel(a);
        b.setBounds(0,0,1000,1000);
        this.getContentPane().add(b);
    }


    public void initJM(){
        this.setSize(603,680);
        //设置界面标题
        this.setTitle("拼图游戏1.0");
        //设置界面置顶
        this.setAlwaysOnTop(true);
        //设置界面居中
        this.setLocationRelativeTo(null);
        //设置界面关闭同时关闭程序运行
        this.setDefaultCloseOperation(3);

        //取消默认居中放置组件
        this.setLayout(null);
    }

    public void initMnue(){
        //初始化菜单
        //创建菜单横栏（总栏）
        JMenuBar JMenuBar = new JMenuBar();
        //创建菜单选项
        JMenu JMenu1 = new JMenu("功能");
        JMenu JMenu2 = new JMenu("关于我们");
        //创建菜单具体内容
        JMenuItem relogin = new JMenuItem("重新登陆");
        relogin.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                dispose();
                loginUI u1 = new loginUI();

            }
        });


        JMenuItem replay = new JMenuItem("重新游戏");
        replay.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                System.out.println("重新开始游戏");
                disorder();
                playgame();
                repaint();
            }
        });

        JMenuItem exit = new JMenuItem("关闭游戏");
        exit.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                dispose();

            }
        });

        JMenuItem aboutus = new JMenuItem("关于我们");
        JMenu tips = new JMenu("提示");

        JMenuItem A = new JMenuItem("按住“A”键即可查看原图");
        JMenuItem B = new JMenuItem("点击“B”键即可一件通关");



        //将每一个选项下的条目添加到选项中

        JMenu1.add(relogin);
        JMenu1.add(replay);
        JMenu1.add(exit);
        JMenu1.add(tips);

        tips.add(A);
        tips.add(B);

        JMenu2.add(aboutus);

        JMenuBar.add(JMenu1);
        JMenuBar.add(JMenu2);

        this.setJMenuBar(JMenuBar);
    }




    public int findpicture(MouseEvent m){
        int number = 10000;
        int x = m.getX();
        int y = m.getY()-52;
        if         (x>=  83&&x<=104+83&&y>=    140&&y<=104+140){
            number = 0;
        }else if (x>=105+83&&x<=209+83&&y>=    140&&y<=104+140){
            number = 1;
        }else if (x>=210+83&&x<=314+83&&y>=    140&&y<=104+140){
            number = 2;
        }else if (x>=315+83&&x<=419+83&&y>=    140&&y<=104+140){
            number = 3;
        }else if   (x>=  83&&x<=104+83&&y>=105+140&&y<=209+140){
            number = 4;
        }else if (x>=105+83&&x<=209+83&&y>=105+140&&y<=209+140){
            number = 5;
        }else if (x>=210+83&&x<=314+83&&y>=105+140&&y<=209+140){
            number = 6;
        }else if (x>=315+83&&x<=419+83&&y>=105+140&&y<=209+140){
            number = 7;
        }else if   (x>=  83&&x<=104+83&&y>=210+140&&y<=314+140){
            number = 8;
        }else if (x>=105+83&&x<=209+83&&y>=210+140&&y<=314+140){
            number = 9;
        }else if (x>=210+83&&x<=314+83&&y>=210+140&&y<=314+140){
            number = 10;
        }else if (x>=315+83&&x<=419+83&&y>=210+140&&y<=314+140){
            number = 11;
        }else if   (x>=  83&&x<=104+83&&y>=315+140&&y<=419+140){
            number = 12;
        }else if (x>=105+83&&x<=209+83&&y>=315+140&&y<=419+140){
            number = 13;
        }else if (x>=210+83&&x<=314+83&&y>=315+140&&y<=419+140){
            number = 14;
        }else if (x>=315+83&&x<=419+83&&y>=315+140&&y<=419+140){
            number = 15;
        }
    return number;
    }

}


package Game;
import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

public class loginUI extends JFrame{

    static ArrayList<String[]> list = new ArrayList<>();


    public loginUI(){
        this.initUI();

        this.setVisible(true);
    }
     public void initUI(){
         this.setSize(400,430);
         //设置界面标题
         this.setTitle("登录");
         //设置界面置顶
         this.setAlwaysOnTop(true);
         //设置界面居中
         this.setLocationRelativeTo(null);

         String[] a = {"zhangsan","zhangsan"};
         String[] b = {"lisi","lisi"};
         String[] C = {"1","1"};
         list.add(a);
         list.add(b);
         list.add(C);

         JLabel account1 = new JLabel("账号");
         account1.setBounds(50,50,100,50);
         this.getContentPane().add(account1);

         JLabel password = new JLabel("密码");
         password.setBounds(50,200,100,50);
         this.getContentPane().add(password);

         JTextField zhanghao = new JFormattedTextField();
         zhanghao.setBounds(50,100,300,50);
         this.getContentPane().add(zhanghao);

         JPasswordField mima = new JPasswordField();
         mima.setBounds(50,250,300,50);
         this.getContentPane().add(mima);

         JButton login = new JButton("登录");
         login.addActionListener(new ActionListener() {
             @Override
             public void actionPerformed(ActionEvent e) {
                 String a = zhanghao.getText();
                 String b = new String(mima.getPassword());
                 int number = 0;
                 boolean c = false;
                 for (int i = 0; i < list.size(); i++) {
                     String  z = list.get(i)[0].toString();
                     if(a.equals(z)){
                         c= true;
                         break;
                     }
                     number++;
                 }
                 if(!c){
                     System.out.println("没有与之匹配的账号，如需登录请注册");
                 }else{
                     String y = list.get(number)[1].toString();
                     if(b.equals(y)){
                         System.out.println("登陆成功");
                         dispose();
                         MainUItest M= new MainUItest();
                     }
                 }


             }
         });
         login.setBounds(50,350,100,50);
         this.getContentPane().add(login);

         JButton regist = new JButton("注册");
         regist.addActionListener(new ActionListener() {
             @Override
             public void actionPerformed(ActionEvent e) {
                 dispose();
                 RegistUI registUI = new RegistUI();
                 lookaccount();


             }
         });

         regist.setBounds(200,350,100,50);
         this.getContentPane().add(regist);

         //设置界面关闭同时关闭程序运行
         this.setDefaultCloseOperation(3);
         //取消默认居中放置组件
         this.setLayout(null);
     }
     public void lookaccount(){
         for (int i = 0; i < list.size(); i++) {
             String[] X= list.get(i);
             System.out.println(X[0]);
             System.out.println(X[1]);
         }
     }

}


package Game;

import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class RegistUI extends loginUI {
    String ts;
    public void setTs(String a){
        this.ts = a;
    }

    public String getTs(){
        return this.ts;
    }
    public RegistUI(){
        this.initUI();

        this.setVisible(true);
    }

    public void initUI(){
        this.setSize(400,480);
        //设置界面标题
        this.setTitle("注册");
        //设置界面置顶
        this.setAlwaysOnTop(true);
        //设置界面居中
        this.setLocationRelativeTo(null);
        //放弃原来的界面布局
        this.setLayout(null);
        //
        this.setDefaultCloseOperation(3);



        JLabel account = new JLabel("请输入用户名");
        account.setBounds(20,20,300,30);
        this.getContentPane().add(account);

        JTextField zhanghu = new JTextField();
        zhanghu.setBounds(20,50,300,30);
        this.getContentPane().add(zhanghu);

        JLabel password = new JLabel("请输入密码");
        password.setBounds(20,100,300,30);
        this.getContentPane().add(password);

        JTextField mima = new JTextField();
        mima.setBounds(20,130,300,30);
        this.getContentPane().add(mima);

        JLabel passwordagain = new JLabel("请输入确认密码");
        passwordagain.setBounds(20,150,300,30);
        this.getContentPane().add(passwordagain);

        JTextField querenmima = new JTextField();
        querenmima.setBounds(20,180,300,30);
        this.getContentPane().add(querenmima);

        JButton zc = new JButton("注册");
        zc.addActionListener(new ActionListener()  {
            @Override
            public void actionPerformed(ActionEvent e) {
                String a = zhanghu.getText();
                String b = mima.getText();
                String c = querenmima.getText();

                boolean repeat = false;
                for (int i = 0; i < list.size(); i++) {
                    if(a.equals(list.get(i)[0].toString())){
                        repeat = true;
                    }
                }
                if(a.isEmpty()&&b.isEmpty()&&c.isEmpty()){
                    dispose();
                    RegistUI u1 = new RegistUI();
                    setTs("请输入完整信息再注册");
                    JLabel tishi = new JLabel(ts);
                    tishi.setBounds(200,0,200,30);
                    u1.getContentPane().add(tishi);
                    System.out.println("请输入完整信息再注册");
                    repaint(3);
                }else if(repeat){
                    dispose();
                    RegistUI u1 = new RegistUI();
                    setTs("账号已存在");
                    JLabel tishi = new JLabel(ts);
                    tishi.setBounds(200,0,200,30);
                    u1.getContentPane().add(tishi);
                    System.out.println("账号已存在");
                }else{
                    if(!b.equals(c)){
                        dispose();
                        RegistUI u1 = new RegistUI();
                        setTs("两次密码输入不相同，请检查后再输入");
                        JLabel tishi = new JLabel(ts);
                        tishi.setBounds(200,0,200,30);
                        u1.getContentPane().add(tishi);
                        System.out.println("两次密码输入不相同，请检查后再输入");
                    }else{
                        dispose();
                        RegistUI u1 = new RegistUI();
                        setTs("注册成功");
                        JLabel tishi = new JLabel(ts);
                        tishi.setBounds(200,0,200,30);
                        u1.getContentPane().add(tishi);

                        System.out.println("注册成功");
                        String[] f={a,b};
                        list.add(f);

                    }
                }


            }
        });
        zc.setBounds(20,300,100,50);
        this.getContentPane().add(zc);

        JButton exit = new JButton("退出");
        exit.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                dispose();
                loginUI u1 = new loginUI();
            }
        });
        exit.setBounds(200,300,100,50);
        this.getContentPane().add(exit);

    }


    public void addJLable(JLabel A){
        this.getContentPane().add(A);
        this.getContentPane().setComponentZOrder(A, 0);
        repaint();
    }

}

package Game;

public class APP {
    public static void main(String[] args) {
        loginUI l = new loginUI();
    }
}
